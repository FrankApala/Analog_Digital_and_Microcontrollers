;  Assembly code generated by mikroVirtualMachine - V. 5.0.0.3
;  Date/Time: 08/03/2021 16:01:53
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$0068	$	_init:
;chenillard.ppas,4 :: 		begin
;chenillard.ppas,5 :: 		TRISB:=$00;
$0068	$1303			BCF	STATUS, RP1
$0069	$1683			BSF	STATUS, RP0
$006A	$0186			CLRF	TRISB, 1
;chenillard.ppas,6 :: 		TRISC:=$FF;
$006B	$30FF			MOVLW	255
$006C	$0087			MOVWF	TRISC
;chenillard.ppas,7 :: 		PORTB:=$01;
$006D	$3001			MOVLW	1
$006E	$1283			BCF	STATUS, RP0
$006F	$0086			MOVWF	PORTB
$0070	$	chenillard_L_0:
;chenillard.ppas,8 :: 		end;
$0070	$0008			RETURN
$0004	$	_main:
;chenillard.ppas,9 :: 		begin
;chenillard.ppas,10 :: 		init();
$0004	$2068			CALL	_init
;chenillard.ppas,11 :: 		while (TRUE) do
$0005	$	chenillard_L_3:
;chenillard.ppas,13 :: 		if(PORTC.1 =1) and (PORTB.7= 0) then
$0005	$0807			MOVF	PORTC, 0
$0006	$00F1			MOVWF	STACK_1
$0007	$3000			MOVLW	0
$0008	$18F1			BTFSC	STACK_1, 1
$0009	$3001			MOVLW	1
$000A	$00F1			MOVWF	STACK_1
$000B	$0871			MOVF	STACK_1, 0
$000C	$3A01			XORLW	1
$000D	$30FF			MOVLW	255
$000E	$1D03			BTFSS	STATUS, Z
$000F	$3000			MOVLW	0
$0010	$00F2			MOVWF	STACK_2
$0011	$0806			MOVF	PORTB, 0
$0012	$00F1			MOVWF	STACK_1
$0013	$3000			MOVLW	0
$0014	$1BF1			BTFSC	STACK_1, 7
$0015	$3001			MOVLW	1
$0016	$00F1			MOVWF	STACK_1
$0017	$0871			MOVF	STACK_1, 0
$0018	$3A00			XORLW	0
$0019	$30FF			MOVLW	255
$001A	$1D03			BTFSS	STATUS, Z
$001B	$3000			MOVLW	0
$001C	$00F0			MOVWF	STACK_0
$001D	$0872			MOVF	STACK_2, 0
$001E	$05F0			ANDWF	STACK_0, 1
$001F	$1903			BTFSC	STATUS, Z
$0020	$2846			GOTO	chenillard_L_8
$0021	$	chenillard_L_7:
;chenillard.ppas,15 :: 		PORTB := PORTB shl 1;
$0021	$0806			MOVF	PORTB, 0
$0022	$00F0			MOVWF	STACK_0
$0023	$0DF0			RLF	STACK_0, 1
$0024	$1070			BCF	STACK_0, 0
$0025	$0870			MOVF	STACK_0, 0
$0026	$0086			MOVWF	PORTB
;chenillard.ppas,16 :: 		delay_ms(200);
$0027	$3003			MOVLW	3
$0028	$00FC			MOVWF	STACK_12
$0029	$30FF			MOVLW	255
$002A	$00FB			MOVWF	STACK_11
$002B	$30FF			MOVLW	255
$002C	$00FA			MOVWF	STACK_10
$002D	$0BFC			DECFSZ	STACK_12, F
$002E	$2830			GOTO	$+2
$002F	$2837			GOTO	$+8
$0030	$0BFB			DECFSZ	STACK_11, F
$0031	$2833			GOTO	$+2
$0032	$2836			GOTO	$+4
$0033	$0BFA			DECFSZ	STACK_10, F
$0034	$2833			GOTO	$-1
$0035	$2830			GOTO	$-5
$0036	$282D			GOTO	$-9
$0037	$300B			MOVLW	11
$0038	$00FB			MOVWF	STACK_11
$0039	$30FF			MOVLW	255
$003A	$00FA			MOVWF	STACK_10
$003B	$0BFB			DECFSZ	STACK_11, F
$003C	$283E			GOTO	$+2
$003D	$2841			GOTO	$+4
$003E	$0BFA			DECFSZ	STACK_10, F
$003F	$283E			GOTO	$-1
$0040	$283B			GOTO	$-5
$0041	$3018			MOVLW	24
$0042	$00FA			MOVWF	STACK_10
$0043	$0BFA			DECFSZ	STACK_10, F
$0044	$2843			GOTO	$-1
;chenillard.ppas,17 :: 		end
$0045	$2848			GOTO	chenillard_L_9
;chenillard.ppas,18 :: 		else
$0046	$	chenillard_L_8:
;chenillard.ppas,19 :: 		PORTB:=$01;
$0046	$3001			MOVLW	1
$0047	$0086			MOVWF	PORTB
$0048	$	chenillard_L_9:
;chenillard.ppas,20 :: 		delay_ms(200);
$0048	$3003			MOVLW	3
$0049	$00FC			MOVWF	STACK_12
$004A	$30FF			MOVLW	255
$004B	$00FB			MOVWF	STACK_11
$004C	$30FF			MOVLW	255
$004D	$00FA			MOVWF	STACK_10
$004E	$0BFC			DECFSZ	STACK_12, F
$004F	$2851			GOTO	$+2
$0050	$2858			GOTO	$+8
$0051	$0BFB			DECFSZ	STACK_11, F
$0052	$2854			GOTO	$+2
$0053	$2857			GOTO	$+4
$0054	$0BFA			DECFSZ	STACK_10, F
$0055	$2854			GOTO	$-1
$0056	$2851			GOTO	$-5
$0057	$284E			GOTO	$-9
$0058	$300B			MOVLW	11
$0059	$00FB			MOVWF	STACK_11
$005A	$30FF			MOVLW	255
$005B	$00FA			MOVWF	STACK_10
$005C	$0BFB			DECFSZ	STACK_11, F
$005D	$285F			GOTO	$+2
$005E	$2862			GOTO	$+4
$005F	$0BFA			DECFSZ	STACK_10, F
$0060	$285F			GOTO	$-1
$0061	$285C			GOTO	$-5
$0062	$3018			MOVLW	24
$0063	$00FA			MOVWF	STACK_10
$0064	$0BFA			DECFSZ	STACK_10, F
$0065	$2864			GOTO	$-1
;chenillard.ppas,21 :: 		end;
$0066	$2805			GOTO	chenillard_L_3
;chenillard.ppas,22 :: 		end.
$0067	$2867			GOTO	$
